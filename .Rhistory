getwd()
setwd("~/AD1-Inferencia")
knitr::opts_chunk$set(echo = TRUE, warning = FALSE)
library(GGally)
library(GGally)
library(here)
library(plotly)
library(ggplot2)
library(reshape2)
library(chron)
library(boot)
theme_set(theme_bw())
users_data_from_github = read_csv(here("data/github-users-committing-filetypes.csv"),
col_types = cols(
.default = col_double(),
file_extension = col_character(),
month_day = col_integer(),
the_month = col_integer(),
the_year = col_integer(),
users = col_integer()
))
library(tidyverse)
library(tidyverse)
library(GGally)
library(here)
library(plotly)
library(ggplot2)
library(reshape2)
library(chron)
library(boot)
theme_set(theme_bw())
users_data_from_github = read_csv(here("data/github-users-committing-filetypes.csv"),
col_types = cols(
.default = col_double(),
file_extension = col_character(),
month_day = col_integer(),
the_month = col_integer(),
the_year = col_integer(),
users = col_integer()
))
non_programming_languages <- c("pdf", "md", "html", "txt", "json", "xml", "css", "yml", "scss", "jpg",
"lock", "png", "gradle", "config", "ico", "gif", "svg", "csproj", "rst",
"map", "ttf", "yaml", "pbxproj", "less", "woff", "eot")
programming_languages <- subset(users_data_from_github, !(file_extension %in% non_programming_languages))
programming_languages_sorted <- programming_languages %>%
arrange(file_extension, the_year, the_month, month_day)
##Linguagens de programacao
unique(programming_languages_sorted$file_extension)
programming_languages_sorted <- programming_languages_sorted %>%
mutate(date_formated = paste(the_year, the_month, month_day, sep="-")) %>%
mutate(is_weekend = wday(date_formated, label = FALSE, abbr = TRUE, ordered = FALSE))
old_languages <- programming_languages_sorted %>%
filter(file_extension %in% c('java', 'c', 'sql'))
View(old_languages)
new_languages <- programming_languages_sorted %>%
filter(file_extension %in% c('go', 'ts', 'swift'))
View(new_languages)
old_languages <- programming_languages_sorted %>%
filter(file_extension %in% c('java', 'c', 'sql')) %>%
group_by(file_extension, the_year, the_month) %>%
summarise(monthly_users = sum(users))
new_languages <- programming_languages_sorted %>%
filter(file_extension %in% c('go', 'ts', 'swift')) %>%
group_by(file_extension, the_year, the_month) %>%
summarise(monthly_users = sum(users))
old_languages <- programming_languages_sorted %>%
filter(file_extension %in% c('java', 'c', 'sql')) %>%
group_by(file_extension, the_year, the_month) %>%
summarise(monthly_users = sum(users))
new_languages <- programming_languages_sorted %>%
filter(file_extension %in% c('go', 'ts', 'swift')) %>%
group_by(file_extension, the_year, the_month) %>%
summarise(monthly_users = sum(users))
year <- as.factor(old_languages$the_year)
sp <- ggplot(old_languages, aes(x = the_month,y = monthly_users, color = year)) +
geom_point(size=1) + xlab("Month") + ylab("Users") +
geom_line() +
ggtitle("Java Script") +
geom_hline(aes(yintercept=median(monthly_users)),colour="#315b7d", linetype="dashed")
sp
sp <- ggplot(old_languages, aes(x = the_month,y = monthly_users, color = year)) +
geom_point(size=1) + xlab("Month") + ylab("Users") +
geom_line()
sp
View(old_languages)
ggplotly(sp)
old_languages <- programming_languages_sorted %>%
filter(file_extension %in% c('java', 'c', 'sql')) %>%
group_by(file_extension, the_year, the_month) %>%
summarise(monthly_users = sum(users))
View(old_languages)
View(old_languages)
old_languages <- programming_languages_sorted %>%
filter(file_extension %in% c('java', 'c', 'sql')) %>%
group_by(file_extension, the_year, the_month) %>%
summarise(monthly_users = sum(users)) %>%
arrange(file_extension)
View(old_languages)
View(old_languages)
old_languages <- programming_languages_sorted %>%
filter(file_extension %in% c('java', 'c', 'sql')) %>%
group_by(file_extension, the_year, the_month) %>%
summarise(monthly_users = sum(users)) %>%
arrange(file_extension, the_year)
View(old_languages)
old_languages <- programming_languages_sorted %>%
filter(file_extension %in% c('java', 'c', 'sql')) %>%
group_by(the_year, the_month) %>%
summarise(monthly_users = sum(users))
View(old_languages)
year <- as.factor(old_languages$the_year)
sp <- ggplot(old_languages, aes(x = the_month,y = monthly_users, color = year)) +
geom_point(size=1) + xlab("Month") + ylab("Users") +
geom_line()
ggplotly(sp)
sp <- ggplot(old_languages, aes(x = the_month,y = monthly_users, color = year)) +
geom_point(size=1) + xlab("Month") + ylab("Users") +
geom_line() +
ggtitle("Linguagens mais antigas") +
geom_hline(aes(yintercept=median(monthly_users)),colour="#315b7d", linetype="dashed")
ggplotly(sp)
old_languages <- programming_languages_sorted %>%
filter(file_extension %in% c('java', 'c', 'sql')) %>%
group_by(the_year, the_month) %>%
summarise(monthly_users = sum(users))
new_languages <- programming_languages_sorted %>%
filter(file_extension %in% c('go', 'ts', 'swift')) %>%
group_by(the_year, the_month) %>%
summarise(monthly_users = sum(users))
year <- as.factor(old_languages$the_year)
ol_sp <- ggplot(old_languages, aes(x = the_month,y = monthly_users, color = year)) +
geom_point(size=1) + xlab("Month") + ylab("Users") +
geom_line() +
ggtitle("Linguagens mais antigas") +
geom_hline(aes(yintercept=median(monthly_users)),colour="#315b7d", linetype="dashed")
nl_sp <- ggplot(new_languages, aes(x = the_month,y = monthly_users, color = year)) +
geom_point(size=1) + xlab("Month") + ylab("Users") +
geom_line() +
ggtitle("Linguagens mais recentes") +
geom_hline(aes(yintercept=median(monthly_users)),colour="#315b7d", linetype="dashed")
ggplotly(ol_sp)
ggplotly(nl_sp)
ggplotly(nl_sp)
old_languages <- programming_languages_sorted %>%
filter(file_extension %in% c('java', 'c', 'sql')) %>%
group_by(the_year, the_month) %>%
summarise(monthly_users = sum(users))
new_languages <- programming_languages_sorted %>%
filter(file_extension %in% c('go', 'ts', 'swift')) %>%
group_by(the_year, the_month) %>%
summarise(monthly_users = sum(users))
year <- as.factor(old_languages$the_year)
ol_sp <- ggplot(old_languages, aes(x = the_month,y = monthly_users, color = year)) +
geom_point(size=1) + xlab("Month") + ylab("Users") +
geom_line() +
ggtitle("Linguagens mais antigas") +
geom_hline(aes(yintercept=median(monthly_users)),colour="#315b7d", linetype="dashed")
ggplotly(ol_sp)
year <- as.factor(new_languages$the_year)
nl_sp <- ggplot(new_languages, aes(x = the_month,y = monthly_users, color = year)) +
geom_point(size=1) + xlab("Month") + ylab("Users") +
geom_line() +
ggtitle("Linguagens mais recentes") +
geom_hline(aes(yintercept=median(monthly_users)),colour="#315b7d", linetype="dashed")
ggplotly(nl_sp)
set.seed(1)
funcao_bootstrap <- function(dado, indices){
d = dado %>%
slice(indices) %>%
pull(users)
return(mean(d))
}
bootstraps <- boot(data = old_languages,
statistic = funcao_bootstrap, # <- referÃªncia para a funÃ§Ã£o
R = 2000) # nÃºmero de bootstraps
View(old_languages)
old_languages <- programming_languages_sorted %>%
filter(file_extension %in% c('java', 'c', 'sql'))
View(old_languages)
funcao_bootstrap <- function(dado, indices){
d = dado %>%
slice(indices) %>%
pull(users)
return(mean(d))
}
bootstraps <- boot(data = old_languages,
statistic = funcao_bootstrap, # <- referÃªncia para a funÃ§Ã£o
R = 2000) # nÃºmero de bootstraps
bootstraps <- boot(data = old_languages,
statistic = funcao_bootstrap, # <- referÃªncia para a funÃ§Ã£o
R = 2000) # nÃºmero de bootstraps
boot.ci(bootstraps, conf = 0.95, type = "bca")
funcao_bootstrap <- function(dado, indices){
d = dado %>%
slice(indices) %>%
pull(users)
return(median(d))
}
bootstraps <- boot(data = old_languages,
statistic = funcao_bootstrap, # <- referÃªncia para a funÃ§Ã£o
R = 2000) # nÃºmero de bootstraps
bootstraps <- boot(data = old_languages,
statistic = funcao_bootstrap, # <- referÃªncia para a funÃ§Ã£o
R = 2000) # nÃºmero de bootstraps
boot.ci(bootstraps, conf = 0.95, type = "bca")
boot.ci(bootstraps, conf = 0.95, type = "basic")
#glimpse(bootstraps$t)
median(old_languages$users)
old_languages <- programming_languages_sorted %>%
filter(file_extension %in% c('java', 'c', 'sql')) %>%
arrange(file_extension, the_year, the_month) %>%
summarise(monthly_users = sum(users))
year <- as.factor(old_languages$the_year)
ol_sp <- ggplot(old_languages, aes(x = the_month,y = monthly_users, color = year)) +
geom_point(size=1) + xlab("Month") + ylab("Users") +
geom_line() +
ggtitle("Linguagens mais antigas") +
geom_hline(aes(yintercept=median(monthly_users)),colour="#315b7d", linetype="dashed")
ggplotly(ol_sp)
new_languages <- programming_languages_sorted %>%
filter(file_extension %in% c('go', 'ts', 'swift'))
bootstraps <- boot(data = new_languages,
statistic = funcao_bootstrap, # <- referencia para a funcao
R = 2000) # numero de bootstraps
bootstraps <- boot(data = new_languages,
statistic = funcao_bootstrap, # <- referencia para a funcao
R = 2000) # numero de bootstraps
boot.ci(bootstraps, conf = 0.95, type = "basic")
old_languages <- programming_languages_sorted %>%
filter(file_extension %in% c('java', 'c', 'sql')) %>%
mutate(is_weekend = is.weekend(date_formated))
old_languages <- programming_languages_sorted %>%
filter(file_extension %in% c('java', 'c', 'sql')) %>%
mutate(date_formated = paste(the_year, the_month, month_day, sep="-")) %>%
mutate(is_weekend = is.weekend(date_formated))
View(old_languages)
set.seed(1)
old_languages <- programming_languages_sorted %>%
filter(file_extension %in% c('java', 'c', 'sql')) %>%
mutate(date_formated = paste(the_year, the_month, month_day, sep="-")) %>%
mutate(is_weekend = is.weekend(date_formated)) %>%
filter( is_weekend == FALSE)
funcao_bootstrap <- function(dado, indices){
d = dado %>%
slice(indices) %>%
pull(users)
return(median(d))
}
bootstraps <- boot(data = old_languages,
statistic = funcao_bootstrap, # <- referencia para a funcao
R = 2000) # numero de bootstraps
bootstraps <- boot(data = old_languages,
statistic = funcao_bootstrap, # <- referencia para a funcao
R = 2000) # numero de bootstraps
boot.ci(bootstraps, conf = 0.95, type = "basic")
doc_weekends <- programming_languages_sorted %>%
filter(file_extension %in% c('java', 'c', 'sql')) %>%
mutate(date_formated = paste(the_year, the_month, month_day, sep="-")) %>%
mutate(is_weekend = is.weekend(date_formated)) %>%
filter( is_weekend == TRUE)
bootstraps <- boot(data = doc_weekends,
statistic = funcao_bootstrap, # <- referencia para a funcao
R = 2000) # numero de bootstraps
bootstraps <- boot(data = doc_weekends,
statistic = funcao_bootstrap, # <- referencia para a funcao
R = 2000) # numero de bootstraps
boot.ci(bootstraps, conf = 0.95, type = "basic")
knitr::opts_chunk$set(echo = TRUE, warning = FALSE)
library(tidyverse)
library(GGally)
library(here)
library(plotly)
library(ggplot2)
library(reshape2)
library(chron)
library(boot)
theme_set(theme_bw())
plot(bootstraps)
